parameters:
    level: 8
    paths:
        - src
        - tests
    treatPhpDocTypesAsCertain: false
    reportUnmatchedIgnoredErrors: false
    checkMissingIterableValueType: false
    checkGenericClassInNonGenericObjectType: false
    ignoreErrors:
        # Requires a release of https://github.com/JetBrains/phpstorm-stubs/pull/553
        -
            message: '~^Call to function assert\(\) with true will always evaluate to true\.$~'
            path: src/Driver/PDO/Connection.php

        # Requires a release of https://github.com/JetBrains/phpstorm-stubs/pull/923
        -
            message: '~^Instanceof between PDOStatement and PDOStatement will always evaluate to true\.$~'
            path: src/Driver/PDO/Connection.php

        # Requires a release of https://github.com/JetBrains/phpstorm-stubs/pull/1158
        -
            message: '~^Strict comparison using === between string and null will always evaluate to false\.$~'
            path: %currentWorkingDirectory%/src/Driver/IBMDB2/Connection.php

        # https://github.com/phpstan/phpstan/issues/3134
        -
            message: '~^Call to static method PHPUnit\\Framework\\Assert::assertSame\(\) with Doctrine\\DBAL\\Types\\Type and Doctrine\\DBAL\\Types\\Type will always evaluate to true\.$~'
            path: tests/Types/TypeRegistryTest.php

        # https://github.com/phpstan/phpstan-strict-rules/issues/103
        -
            message: '~^Construct empty\(\) is not allowed. Use more strict comparison\.~'
            paths:
                - src/Connections/PrimaryReadReplicaConnection.php
                - src/Driver/*/Driver.php
                - src/Driver/AbstractOracleDriver/EasyConnectString.php
                - src/Platforms/*Platform.php
                - src/Schema/*SchemaManager.php

        # In some namespaces, we use array<string,mixed>, some elements of which are actually boolean
        -
            message: '~^Only booleans are allowed in .*, mixed given~'
            paths:
                - src/Driver/*/Driver.php
                - src/Platforms/*Platform.php
                - src/Schema/*SchemaManager.php

        # Some APIs use variable method calls internally
        -
            message: '~^Variable method call on .*~'
            paths:
                - src/Schema/AbstractSchemaManager.php
                - src/Schema/Column.php

        # Temporaily suppressed during up-merging an upgrade to PHPStan 0.12.33
        -
            message: '~^Parameter #1 \$expected of static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\) expects class-string<Doctrine\\DBAL\\Connection&PHPUnit\\Framework\\MockObject\\MockObject>, class-string<Doctrine\\DBAL\\Connection>&class-string<PHPUnit\\Framework\\MockObject\\MockObject> given\.$~'
            path: %currentWorkingDirectory%/tests/DriverManagerTest.php

        # Unlike Psalm, PHPStan doesn't understand the shape of the parse_str() return value
        -
            message: '~^Parameter #1 \$scheme of static method Doctrine\\DBAL\\DriverManager::parseDatabaseUrlScheme\(\) expects string\|null, int\|string\|null given\.$~'
            paths:
                - src/DriverManager.php

        # https://github.com/phpstan/phpstan-src/pull/692
        -
            message: '~^Parameter #2 \$count of function array_fill expects int<0, max>, int given\.~'
            paths:
                - %currentWorkingDirectory%/src/Driver/Mysqli/Statement.php

        # TODO: remove this once the support for PHP 7 is dropped
        -
            message: '~^Strict comparison using !== between int and false will always evaluate to true\.$~'
            paths:
                - src/Driver/OCI8/Result.php
        -
            message: '~^Unreachable statement - code above always terminates\.$~'
            paths:
                - src/Driver/OCI8/Result.php

        -
            message: '~Template type T of method Doctrine\\DBAL\\DriverManager::getConnection\(\) is not referenced in a parameter\.~'
            paths:
                - src/DriverManager.ph

        -
            message: '~Method Doctrine\\DBAL\\DriverManager::createDriver\(\) should return Doctrine\\DBAL\\Driver but returns object\.~'
            paths:
                - src/DriverManager.php

        # https://github.com/phpstan/phpstan/issues/4679
        -
            message: '~^Cannot call method writeTemporary\(\) on OCILob\|null\.$~'
            paths:
                - src/Driver/OCI8/Statement.php

        -
            message: '~Method Doctrine\\DBAL\\Driver\\Mysqli\\Result::rowCount\(\) should return int but returns int(:?<0, max>)?\|string\.~'
            paths:
                - src/Driver/Mysqli/Result.php

        -
            message: '~Method Doctrine\\DBAL\\Driver\\Mysqli\\Connection::exec\(\) should return int but returns int\|string\.~'
            paths:
                - src/Driver/Mysqli/Connection.php

        # Requires a release of https://github.com/phpstan/phpstan-src/pull/719
        -
            message: '~Strict comparison using === between non-empty-string and false will always evaluate to false\.~'
            path: src/Driver/PDO/Connection.php

        # The schema manager isn't initialized if the test is skipped
        -
            message: '~Strict comparison using === between Doctrine\\DBAL\\Schema\\AbstractSchemaManager and null will always evaluate to false\.~'
            path: tests/Functional/Schema/SchemaManagerFunctionalTestCase.php

        -
            message: '~^Parameter #1 \$message of class Doctrine\\DBAL\\Driver\\Mysqli\\Exception\\ConnectionFailed constructor expects string, string\|null given\.$~'
            paths:
                - src/Driver/Mysqli/Exception/ConnectionFailed.php

        -
            message: '~^Cannot use array destructuring on array\|null\.$~'
            paths:
                - src/Driver/PDO/Connection.php

        # These properties are accessed via var_dump()
        -
            message: '~Property Doctrine\\DBAL\\Tests\\Tools\\TestAsset\\.*::\$.* is never read, only written\.~'
            path: tests/Tools/TestAsset/*.php

includes:
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/phpstan/phpstan-phpunit/rules.neon
    - vendor/phpstan/phpstan-strict-rules/rules.neon
